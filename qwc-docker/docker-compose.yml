version: '3.4'

x-qwc-service-variables: &qwc-service-variables
  JWT_SECRET_KEY: $JWT_SECRET_KEY
  JWT_COOKIE_CSRF_PROTECT: 'True'
  TENANT_HEADER: tenant

  # Set these to override the UID/GID which runs uwsgi. Useful to ensure uwsgi runs under the same user/group
  # which owns the shared volumes on host, avoiding the need to change the ownership/permissions of those files/folders.
  # SERVICE_UID: 1000
  # SERVICE_GID: 1000

services:

  qwc-config-db-bgeo:
    image: sourcepole/qwc-base-db:15
    environment:
      POSTGRES_PASSWORD: '' # TODO: Set your postgres password here!
    volumes:
     - ./volumes/db/bgeo:/var/lib/postgresql/docker
    ports:
    - "127.0.0.1:5439:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s

  # Config db migrate for tenant 'bgeo', we need one for each tenant
  qwc-config-db-migrate:
    image: sourcepole/qwc-base-db-migrate:v2024.07.24
    environment:
      PGSERVICE: 'qwc_configdb_bgeo'
    volumes:
     - ./pg_service.conf:/tmp/pg_service.conf:ro

  qwc-qgis-server:
    build: ../qwc-qgis-server
    # image: sourcepole/qwc-qgis-server:3.28-plugins
    # ports:
      # - "127.0.0.1:8001:80"
    volumes:
      - ./volumes/qgs-resources:/data:ro
      # - /media/qwc2/qgis-projects:/data:rw  <- Example for mounting /data in external folder

  qwc-config-service:
    image: sourcepole/qwc-config-generator:v2024.5-lts-noqgis
    environment:
      <<: *qwc-service-variables
      INPUT_CONFIG_PATH: '/srv/qwc_service/config-in'
      OUTPUT_CONFIG_PATH: '/srv/qwc_service/config-out'
      GENERATE_DYNAMIC_KVRELS: 1
    ports:
      - "127.0.0.1:5010:9090"
    volumes:
      - ./volumes/config-in:/srv/qwc_service/config-in:ro
      - ./volumes/config:/srv/qwc_service/config-out:rw
      - ./volumes/qwc2:/qwc2
      # - /media/qwc2/qgis-projects:/data <- Example for mounting /data in external folder
      - ./volumes/qgs-resources:/data
      - ./pg_service.conf:/srv/pg_service.conf:ro

  qwc-ogc-service:
    image: sourcepole/qwc-ogc-service:v2024.07.04
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:9090/healthz || exit 1
      interval: 20s
    environment:
      <<: *qwc-service-variables
      SERVICE_MOUNTPOINT: '/ows'
      AUTH_REQUIRED: True
    volumes:
      - ./volumes/config:/srv/qwc_service/config:ro
    # ports:
    #   - "127.0.0.1:5013:9090"

  qwc-map-viewer:
    # Use with oun deployment if QWC2 App in volumes/qwc2
    image: sourcepole/qwc-map-viewer-base:v2024.07.25
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:9090/healthz || exit 1
      interval: 20s
    environment:
      <<: *qwc-service-variables
      SERVICE_MOUNTPOINT: '/'
      AUTH_REQUIRED: True
    # ports:
    #   - "127.0.0.1:5030:9090"
    volumes:
      - ./pg_service.conf:/srv/pg_service.conf:ro
      - ./volumes/config:/srv/qwc_service/config:ro
      # When using qwc-map-viewer-demo:
      # - ./volumes/qwc2/assets:/qwc2/assets
      # - ./volumes/qwc2/assets:/qwc2/assets:ro
      # - ./volumes/qwc2/translations:/qwc2/translations:ro
      # When using own viewer build with qwc-map-viewer-base:
      - ./volumes/qwc2:/qwc2:ro

  qwc-admin-gui:
    build: ../qwc-admin-gui
    # healthcheck:
    #   test: wget --no-verbose --tries=1 --spider http://localhost:9090/healthz || exit 1
    #   interval: 20s
    environment:
      <<: *qwc-service-variables
      # Don't enable JWT CSRF protection for admin gui, it conflicts with CSRF protection offered by Flask-WTF
      JWT_COOKIE_CSRF_PROTECT: 'False'
      # USER_INFO_FIELDS: '[{"title": "Surname", "name": "surname", "type": "text", "required": true}, {"title": "First name", "name": "first_name", "type": "text", "required": true}, {"title": "Street", "name": "street", "type": "text"}, {"title": "ZIP", "name": "zip", "type": "text"}, {"title": "City", "name": "city", "type": "text"}]'
      # TOTP_ENABLED: 'False'
      GROUP_REGISTRATION_ENABLED: 'True'
      #IDLE_TIMEOUT: 600
      DEFAULT_LOCALE: 'en'
      MAIL_SUPPRESS_SEND: 'True'
      MAIL_DEFAULT_SENDER: 'from@example.com'
      SERVICE_MOUNTPOINT: /admin
    # ports:
    #   - "127.0.0.1:5031:9090"
    volumes:
      - ./pg_service.conf:/srv/pg_service.conf:ro
      - ./volumes/config:/srv/qwc_service/config:ro
      # required by themes plugin:
      - ./volumes/info-templates:/info_templates
      - ./volumes/config-in:/srv/qwc_service/config-in:rw
      - ./volumes/qwc2:/qwc2
      # - /media/qwc2/qgis-projects:/qgs-resources  <- Example for mounting /data in external folder
      - ./volumes/qgs-resources:/qgs-resources
      # required by giswater logs
      - ./volumes/gw_logs:/gw_logs:ro

  qwc-auth-service:
    image: sourcepole/qwc-db-auth:v2024.4-lts
    environment:
      <<: *qwc-service-variables
      SERVICE_MOUNTPOINT: '/auth'
      # https://flask-jwt-extended.readthedocs.io/en/stable/options/#cookie-options
      JWT_COOKIE_SAMESITE: 'Strict'
      # Enable the following in production (requires https):
      # JWT_COOKIE_SECURE: 'True'
      # TOTP_ENABLED: 'False'
      # TOTP_ISSUER_NAME: 'QWC Services'
      # Mail configuration:
      # MAIL_SUPPRESS_SEND: 'True'
      # MAIL_SERVER: "smtp.test.com"
      # MAIL_PORT: "111"
      # MAIL_USERNAME: "test@test.com"
      # MAIL_PASSWORD: 'test'
      # MAIL_DEFAULT_SENDER: 'test@test.com'
      # MAIL_USE_TLS: 'True'
      # MAIL_USE_SSL: 'False'
    volumes:
      - ./pg_service.conf:/srv/pg_service.conf:ro
      - ./volumes/config:/srv/qwc_service/config:ro
    # ports:
    #   - "127.0.0.1:5017:9090"

  # qwc-ldap-auth-service:
  #   build: ../qwc-ldap-auth
  #   environment:
  #     <<: *qwc-service-variables
  #     SERVICE_MOUNTPOINT: '/ldap_auth'

  qwc-data-service:
    # build: ../qwc-data-service
    image: sourcepole/qwc-data-service:v2024.07.04
    environment:
      <<: *qwc-service-variables
      SERVICE_MOUNTPOINT: '/data'
      ATTACHMENTS_BASE_DIR: '/attachments'
      MAX_ATTACHMENT_FILE_SIZE: 1048576
    volumes:
      - ./pg_service.conf:/srv/pg_service.conf:ro
      - ./volumes/config:/srv/qwc_service/config:ro
      - ./volumes/attachments:/attachments
    # ports:
    #   - "127.0.0.1:5012:9090"

  qwc-elevation-service:
    image: sourcepole/qwc-elevation-service:v2024.2-lts
    environment:
      <<: *qwc-service-variables
      SERVICE_MOUNTPOINT: '/elevation'
    volumes:
      - ./volumes/config:/srv/qwc_service/config:ro
      - ./volumes/elevations:/elevations:ro
    # ports:
    #   - "127.0.0.1:5002:9090"

  qwc-permalink-service:
    image: sourcepole/qwc-permalink-service:v2024.3-lts
    environment:
      <<: *qwc-service-variables
      SERVICE_MOUNTPOINT: '/api/v1/permalink'
    volumes:
      - ./pg_service.conf:/srv/pg_service.conf:ro
      - ./volumes/config:/srv/qwc_service/config:ro
    # ports:
    #   - "127.0.0.1:5001:9090"


  qwc-feature-info-service:
    image: sourcepole/qwc-feature-info-service:v2024.07.04
    environment:
      <<: *qwc-service-variables
      SERVICE_MOUNTPOINT: '/api/v1/featureinfo'
    volumes:
      - ./pg_service.conf:/srv/pg_service.conf:ro
      - ./volumes/config:/srv/qwc_service/config:ro
      # - ./volumes/info-templates:/info_templates:ro


  qwc-giswater-service:
    build: ../qwc2-giswater-services
    environment:
      <<: *qwc-service-variables
      SERVICE_MOUNTPOINT: '/giswater'
      # Mail configuration:
      # MAIL_SERVER: "smtp.test.com"
      # MAIL_PORT: "111"
      # MAIL_USERNAME: "test@test.com"
      # MAIL_PASSWORD: 'test'
      # MAIL_DEFAULT_SENDER: 'test@test.com'
      # MAIL_USE_TLS: 'True'
      # MAIL_USE_SSL: 'False'
    volumes:
      - ./pg_service.conf:/srv/pg_service.conf:ro
      - ./volumes/config:/srv/qwc_service/config:ro
      - ./volumes/gw_logs:/var/log/qwc2-giswater-services
      - ./volumes/images:/images

  # mapproxy-bgeo:
  #   build: ../mapproxy-service
  #   environment:
  #     <<: *qwc-service-variables
  #     SERVICE_MOUNTPOINT: '/bgeo/mapproxy'
  #   volumes:
  #     - ./pg_service.conf:/srv/pg_service.conf:ro
  #     - ./volumes/config:/srv/qwc_service/config:ro
  #     - ./volumes/mapproxy/config/bgeo:/srv/qwc_service/mapproxy/config
  #     - ./volumes/mapproxy/tiles/bgeo:/srv/qwc_service/mapproxy/tiles

  # mapproxy-seeding:
  #   build: ../mapproxy-seeding-proxy
  #   environment:
  #     <<: *qwc-service-variables
  #     SERVICE_MOUNTPOINT: '/bgeo/seeding'

  qwc-api-gateway:
    image: nginx:1.19
    ports:
      # - "8088:80"
      - "127.0.0.1:8088:80"
    volumes:
      - ./api-gateway/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./volumes/images:/images
      - ./volumes/docs:/docs
    depends_on:
      - qwc-config-db-bgeo
      - qwc-config-service
      - qwc-qgis-server
      - qwc-ogc-service
      - qwc-map-viewer
      - qwc-auth-service
      - qwc-permalink-service
      - qwc-elevation-service
      - qwc-admin-gui
      - qwc-giswater-service
